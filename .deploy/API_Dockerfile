# Lightweight environment with node pre-installed
# Build with docker build -t test-api -f ./.deploy/API-Dockerfile . 
# Run with docker run --name test-api --restart unless-stopped -dp 3333:3333 test-api
# Add environment variables with `-e ENV_VAR=value` to customize the running container. List of env variables available in .env.template file
FROM node:16-alpine AS builder

# Directory to work in the container
WORKDIR /app

# Copy package.json to the root of the WORKDIR
COPY package.json ./

# Copy all files different to local machine to container
# The way caching works, any changes to any files will force everything under it to
#   rebuild all subsequent steps
COPY nx.json ./nx.json
COPY tsconfig.base.json ./tsconfig.base.json
COPY angular.json ./project.json
COPY decorate-angular-cli.js ./decorate-angular-cli.js
COPY ./libs ./libs
COPY ./apps/api ./apps/api
COPY ./apps/teststore ./apps/testtstore
COPY ./apps/seeder ./apps/seeder

RUN npm install && npx nx build api

FROM node:16

WORKDIR /app
COPY --from=builder /app ./

CMD ["node", "./dist/apps/api/main.js"]